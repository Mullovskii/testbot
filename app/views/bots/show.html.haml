
- if current_user.present?
  = BotAction.destroy_all
  / = Entity.destroy_all
  .col-xs-0
    = render 'layouts/chat_bot', bot_action: @bot_action, latest_bot_actions: @latest_bot_actions

%p#notice= notice


/ = @feed.link
/ = link_to @feed.entries.first.title, @feed.entries.first.url
/ = sanitize @feed.entries.first.summary
/ = sanitize @feed.entries.first.content


/ - if @feed.entries.first.image
/   = image_tag(@feed.entries.first.image, class: "image")



= link_to 'Edit', edit_bot_path(@bot)
\|
= link_to 'Back', bots_path
/ - current_user.entities.each do |e|
/   = e.name == Post.last.filter

/ - @b = BotAction.last
/ = BotAction.last.inspect
/ = Act.where(bot_id: @b.bot_id, intent: @b.intent, sequence: @b.sequence).take

%p
  %b By:
  = @bot.user.email
%h1
  %b Bot:
  = @bot.name
  / = Entity.last.inspect
  / = Key.last.inspect

%h3
  - if current_user.subscriptions.where(bot_id: @bot.id).take
    = link_to "Отписаться", subscription_path(current_user.subscriptions.where(bot_id: @bot.id).take), method: :delete

  - else
    = form_for Subscription.new do |f|
      .field   
        = f.hidden_field :bot_id, value: @bot.id
        = f.hidden_field :user_id, value: current_user.id
        = f.submit 'Подписаться на бота'  




%p
  %h3
    %b Intents:
%p Начни с интента. Intent - это то, вокруг чего построен короткий диалог из нескольких фраз.
%p Если интент начинает бот - выбери «bot intent», если пользователь - «user intent». «Hello intent» - приветствие бота при открытии чата. Default - когда бот что-то не понял.


%h2
  + hello

%p Когда пользователь кликнет "Привет, #{@bot.name}Bot"

.col-md-6
  %h4 Бот реагирует:
  %ul
    - @bot.lessons.where(intent: "start_talk_intent").take.acts.where(sequence: 1).each do |act|
      %li= act.bot_say
      = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
  
  = form_for Act.new do |f|
    .field
      = f.label "Бот отвечает"
      = f.text_field :bot_say
      = f.hidden_field :intent, value: "start_talk_intent"
      = f.hidden_field :bot_id, value: @bot.id
      = f.hidden_field :sequence, value: 1
      = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
      = f.submit '+'
  
  / attached media
  %h5 Прикрепить к ответу:
  
  .col-md-12
    %h4 Пост:

    - if @bot.lessons.where(intent: "start_talk_intent").take.posts.length >= 1 
      - @bot.lessons.where(intent: "start_talk_intent").take.posts.each do |post|
        = post.title
        = post.body
        = post.filter
        = link_to "X", post_path(post), method: :delete

    = form_for Post.new do |f|
      .field  
        = f.hidden_field :bot_id, value: @bot.id
        = f.hidden_field :sequence, value: 1
        = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
        = f.hidden_field :intent, value: "start_talk_intent"
        = f.label :title
        = f.text_field :title            
        = f.label :body
        = f.text_area :body
        = f.label :link
        = f.text_field :link
        = f.label :photo
        = f.text_field :photo

        %b Присвойте посту фильтр-категорию, соответствующую данным, выбранным пользователем из чек-листов. Н-р, если пользователь ранее выбирал интерес "музыка", то, присвоив посту фильтр "музыка", пост будет показываться только пользователям со схожим интересом:
        = f.label :filter
        = f.text_field :filter 
        - if Check.where(bot_id: @bot.id).length >= 1
          %b Фильтры вашего бота:
          - Check.where(bot_id: @bot.id).each do |filter| 
            = filter.name 
      .actions
        = f.submit 'Save'


    .col-md-12
    %h4 RSS:
    %p 10 свежих новостей с внешнего ресурса:

    - if @bot.lessons.where(intent: "start_talk_intent").take.posts.where(rss: true).length >= 1 
      - @bot.lessons.where(intent: "start_talk_intent").take.posts.where(rss: true).each do |post|
        = post.link
        = link_to "X", post_path(post), method: :delete

    = form_for Post.new do |f|
      .field  
        = f.hidden_field :rss, value: true
        = f.hidden_field :bot_id, value: @bot.id
        = f.hidden_field :sequence, value: 1
        = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
        = f.hidden_field :intent, value: "start_talk_intent"
        
        = f.label :link
        = f.text_field :link

        %b Присвойте RSS фильтр-категорию, соответствующую данным, выбранным пользователем из чек-листов. Н-р, если пользователь ранее выбирал интерес "музыка", то, присвоив посту фильтр "музыка", RSS будет показываться только пользователям со схожим интересом:
        = f.label :filter
        = f.text_field :filter 
        - if Check.where(bot_id: @bot.id).length >= 1
          %b Фильтры вашего бота:
          - Check.where(bot_id: @bot.id).each do |filter| 
            = filter.name 
      .actions
        = f.submit 'Save'
    
   
  
  .col-md-12

    %h4 CheckBox:
    - if @bot.lessons.where(intent: "start_talk_intent").take.checks.length >= 1
      - @bot.lessons.where(intent: "start_talk_intent").take.checks.each do |check|
        = check.name
        =link_to "X", check_path(check), method: :delete

    
    = form_for Check.new do |f|
      .field  
        = f.hidden_field :bot_id, value: @bot.id
        = f.hidden_field :sequence, value: 1
        = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
        = f.hidden_field :intent, value: "start_talk_intent"
        = f.label :name
        = f.text_field :name    
      .actions
        = f.submit '+'   


    - if @bot.lessons.where(intent: "start_talk_intent").take.checks.length >= 1
      .row
        Когда пользователь завершит выбор, кликнув "Done" 
        .col-md-6
          %h4 Бот отреагирует:
          %ul
            - @bot.lessons.where(intent: "start_talk_intent").take.acts.where(sequence: 2).each do |act|
              %li= act.bot_say
              = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
      
      = form_for Act.new do |f|
        .field
          = f.label "Бот отреагирует"
          = f.text_field :bot_say
          = f.hidden_field :intent, value: "start_talk_intent"
          = f.hidden_field :bot_id, value: @bot.id
          = f.hidden_field :sequence, value: 2
          = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
          = f.submit '+'  

    %h4 Данные от пользователя:
    %p Присвой имя данным, которые ты планируешь принять от пользователя. После используй "@имя данных" (н-р, @адрес) где угодно в других диалогах:
    - if Key.where(bot_id: @bot.id, intent: "start_talk_intent", sequence: 1).take
      - Key.where(bot_id: @bot.id, intent: "start_talk_intent", sequence: 1).each do |key|
        = key.name
        =link_to "X", key_path(key), method: :delete

    = form_for Key.new do |f|
      .field  
        = f.hidden_field :bot_id, value: @bot.id
        / = f.hidden_field :user_id, value: current_user.id
        = f.hidden_field :intent, value: "start_talk_intent"
        = f.hidden_field :sequence, value: 1
        / = f.hidden_field :user_say_id, value: nil
        = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
        = f.label "имя данных:"
        = f.text_field :name    
      .actions
        = f.submit '+' 

    - if @bot.lessons.where(intent: "start_talk_intent").take.keys.length >= 1
      .row
        Когда пользователь завершит выбор, кликнув "Done" 
        .col-md-6
          %h4 Бот отреагирует:
          %ul
            - @bot.lessons.where(intent: "start_talk_intent").take.acts.where(sequence: 2).each do |act|
              %li= act.bot_say
              = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
      
      = form_for Act.new do |f|
        .field
          = f.label "Бот отреагирует"
          = f.text_field :bot_say
          = f.hidden_field :intent, value: "start_talk_intent"
          = f.hidden_field :bot_id, value: @bot.id
          = f.hidden_field :sequence, value: 2
          = f.hidden_field :lesson_id, value: @bot.lessons.where(intent: "start_talk_intent").take.id
          = f.submit '+'   




.row
%h2
  + user intent

= form_for Lesson.new do |f|
  / = f.label "+ user intent"
  = f.text_field :intent
  = f.hidden_field :bot_id, value: @bot.id
  = f.hidden_field :user_proactive, value: true
  = f.submit '+'


%ul
  - @user_intents.where.not(intent: "start_talk_intent").each do |lesson|
    %h4
      %b= lesson.intent
      = link_to 'Destroy',  lesson,  method: :delete, data: { confirm: 'Are you sure?' } 

    .row 
      .col-md-6
        
        %h4 Если пользователь говорит
        %ul
          - lesson.user_says.each do |user_say|
            %li= user_say.input
            

            = link_to 'Destroy', user_say,  method: :delete, data: { confirm: 'Are you sure?' } 
        
        = form_for UserSay.new do |f|
          .field
            = f.label "Пользователь говорит"
            = f.text_field :input
            = f.hidden_field :intent, value: lesson.intent
            = f.hidden_field :bot_id, value: @bot.id
            = f.hidden_field :lesson_id, value: lesson.id
            = f.submit '+'



      .col-md-6
        
        %h4 Бот отвечает
        %ul
          - lesson.acts.where(sequence: 1).each do |act|
            %li= act.bot_say
            = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
        
        = form_for Act.new do |f|
          .field
            = f.label "Бот отвечает"
            = f.text_field :bot_say
            = f.hidden_field :intent, value: lesson.intent
            = f.hidden_field :sequence, value: 1
            = f.hidden_field :bot_id, value: @bot.id
            = f.hidden_field :lesson_id, value: lesson.id
            = f.submit '+'
        
        / attached media
        %h5 Прикрепить к ответу:
    
        .col-md-12
          %h4 Медиа:
          - if lesson.posts.where(sequence: 1).length >= 1 
            - lesson.posts.where(sequence: 1).each do |post|
              = post.title
              = post.body
              = post.filter
              = link_to "X", post_path(post), method: :delete


          = form_for Post.new do |f|
            .field  
              = f.hidden_field :bot_id, value: @bot.id
              = f.hidden_field :lesson_id, value: lesson.id
              = f.hidden_field :intent, value: lesson.intent
              = f.hidden_field :sequence, value: 1
              = f.label :title
              = f.text_field :title            
              = f.label :body
              = f.text_area :body
              = f.label :link
              = f.text_field :link
              = f.label :photo
              = f.text_field :photo
              %b Присвойте посту фильтр-категорию, соответствующую данным, выбранным пользователем из чек-листов. Н-р, если пользователь ранее выбирал интерес "музыка", то, присвоив посту фильтр "музыка", пост будет показываться только пользователям со схожим интересом:
              = f.label :filter
              = f.text_field :filter 
              - if Check.where(bot_id: @bot.id).length >= 1
                %b Фильтры вашего бота:
                - Check.where(bot_id: @bot.id).each do |filter| 
                  = filter.name 

            .actions
              = f.submit 'Save'
          

        .col-md-12
          %h4 CheckBox:
          - if lesson.checks.where(sequence: 1).length >= 1
            - lesson.checks.each do |check|
              = check.name
              =link_to "X", check_path(check), method: :delete
          
          = form_for Check.new do |f|
            .field  
              = f.hidden_field :bot_id, value: @bot.id
              = f.hidden_field :lesson_id, value: lesson.id
              = f.hidden_field :sequence, value: 1
              = f.hidden_field :intent, value: lesson.intent
              = f.label :name
              = f.text_field :name    
            .actions
              = f.submit '+'    
          - if lesson.checks.where(sequence: 1).length >= 1  
            .row
              Когда пользователь завершит выбор, кликнув "Done" 
              .col-md-6
                %h4 Бот отреагирует:
                %ul
                  - lesson.acts.where(sequence: 2).each do |act|
                    %li= act.bot_say
                    = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' }   
            
            = form_for Act.new do |f|
              .field
                = f.label "Бот отреагирует"
                = f.text_field :bot_say
                = f.hidden_field :intent, value: lesson.intent
                = f.hidden_field :bot_id, value: @bot.id
                = f.hidden_field :sequence, value: 2
                = f.hidden_field :lesson_id, value: lesson.id
                = f.submit '+'  

          %h6 Данные от пользователя:
          %p Присвой имя данным, которые ты планируешь принять от пользователя. После используй "@имя данных" (н-р, @адрес) где угодно в других диалогах:
          - if Key.where(bot_id: @bot.id, intent: lesson.intent, sequence: 1).take
            - Key.where(bot_id: @bot.id, intent: lesson.intent, sequence: 1).each do |key|
              = key.name
              =link_to "X", key_path(key), method: :delete

          = form_for Key.new do |f|
            .field  
              = f.hidden_field :bot_id, value: @bot.id
              / = f.hidden_field :user_id, value: current_user.id
              = f.hidden_field :intent, value: lesson.intent
              = f.hidden_field :sequence, value: 1
              / = f.hidden_field :user_say_id, value: nil
              = f.hidden_field :lesson_id, value: lesson.id
              = f.label "имя данных:"
              = f.text_field :name    
            .actions
              = f.submit '+'
          
          - if lesson.keys.length >= 1
            .row
              Когда пользователь завершит выбор, кликнув "Done" 
              .col-md-6
                %h4 Бот отреагирует:
                %ul
                  - lesson.acts.where(sequence: 2).each do |act|
                    %li= act.bot_say
                    = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
            
            = form_for Act.new do |f|
              .field
                = f.label "Бот отреагирует"
                = f.text_field :bot_say
                = f.hidden_field :intent, value: lesson.intent
                = f.hidden_field :bot_id, value: @bot.id
                = f.hidden_field :sequence, value: 2
                = f.hidden_field :lesson_id, value: lesson.id
                = f.submit '+'   

.row
%h2
  + bot intent

= form_for Lesson.new do |f|
  = f.text_field :intent
  = f.hidden_field :bot_id, value: @bot.id
  = f.hidden_field :user_proactive, value: false
  = f.submit '+'
  / attached media


%ul
  - @bot_intents.each do |lesson|
    %h4
      %b= lesson.intent
      = link_to 'Destroy',  lesson,  method: :delete, data: { confirm: 'Are you sure?' } 

    .row 
      .col-md-6
        
        %h4 Бот говорит первый
        %ul
          - lesson.acts.where(proactive: true, sequence: 0).each do |act|
            %li= act.bot_say
            = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
        
        = form_for Act.new do |f|
          .field
            = f.label "Бот говорит"
            = f.text_field :bot_say
            = f.hidden_field :intent, value: lesson.intent + "_act_first"
            = f.hidden_field :bot_id, value: @bot.id
            = f.hidden_field :sequence, value: 0
            = f.hidden_field :lesson_id, value: lesson.id
            = f.hidden_field :proactive, value: true
            = f.submit '+'

        %h5 Прикрепить к ответу:
        .row
          %h6 Медиа
          - if lesson.posts.where(proactive: true, sequence: 0).length >= 1
            - lesson.posts.where(proactive: true, sequence: 0).each do |post|
              = post.title
              = post.body
              = post.filter
              = link_to "X", post_path(post), method: :delete

          = form_for Post.new do |f|
            .field  
              = f.hidden_field :bot_id, value: @bot.id
              = f.hidden_field :lesson_id, value: lesson.id
              = f.hidden_field :intent, value: lesson.intent
              = f.hidden_field :proactive, value: true
              = f.hidden_field :sequence, value: 0
              = f.label :title
              = f.text_field :title            
              = f.label :body
              = f.text_area :body
              = f.label :link
              = f.text_field :link
              = f.label :photo
              = f.text_field :photo

              %b Присвойте посту фильтр-категорию, соответствующую данным, выбранным пользователем из чек-листов. Н-р, если пользователь ранее выбирал интерес "музыка", то, присвоив посту фильтр "музыка", пост будет показываться только пользователям со схожим интересом:
              = f.label :filter
              = f.text_field :filter 
              - if Check.where(bot_id: @bot.id).length >= 1
                %b Фильтры вашего бота:
                - Check.where(bot_id: @bot.id).each do |filter| 
                  = filter.name 
            .actions
              = f.submit 'Save'
          
         
        .row
          %h6 Время
          - if lesson.schedules.length < 1
            = form_for Schedule.new do |f|
              .field
                = f.hidden_field :bot_id, value: @bot.id
                = f.hidden_field :lesson_id, value: lesson.id
                = f.hidden_field :intent, value: lesson.intent+"_act_first"
                = f.label "отправить в"
                = f.select :time, (0..23)
                %p : 00
                / = f.label "повтор"
                / = f.check_box :repeat
                = f.label "ежедневно"
                = f.check_box :repeat_daily
                .br
                = f.label "отправить через"
                = f.number_field :remind_over
                %p дней после скачивания бота 
              .field
                = f.label :sunday
                = f.check_box :sunday
              .field
                = f.label :monday
                = f.check_box :monday
              .field
                = f.label :tuesday
                = f.check_box :tuesday
              .field
                = f.label :wednesday
                = f.check_box :wednesday
              .field
                = f.label :thursday
                = f.check_box :thursday
              .field
                = f.label :friday
                = f.check_box :friday
              .field
                = f.label :saturday
                = f.check_box :saturday
              .actions
                = f.submit 'Save'
          - else 
            = form_for lesson.schedules.take do |f|
              .field
                = f.hidden_field :bot_id, value: @bot.id
                = f.hidden_field :lesson_id, value: lesson.id
                = f.label "отправить в"
                = f.select :time, (0..23)
                %p : 00
                / = f.label "повтор"
                / = f.check_box :repeat
                = f.label "ежедневно"
                = f.check_box :repeat_daily
                .br
                = f.label "отправить через"
                = f.number_field :remind_over
                %p дней после скачивания бота 
              .field
                = f.label :sunday
                = f.check_box :sunday
              .field
                = f.label :monday
                = f.check_box :monday
              .field
                = f.label :tuesday
                = f.check_box :tuesday
              .field
                = f.label :wednesday
                = f.check_box :wednesday
              .field
                = f.label :thursday
                = f.check_box :thursday
              .field
                = f.label :friday
                = f.check_box :friday
              .field
                = f.label :saturday
                = f.check_box :saturday
              .actions
                = f.submit 'Save'
            = link_to "Delete", schedule_path(lesson.schedules.take), method: :delete



      .col-md-6
        
        %h4 Пользователь отвечает в духе:
        %ul
          - lesson.user_says.each do |user_say|
            %li= user_say.input
            / %li= user_say.regexp
            = link_to 'Destroy',  user_say,  method: :delete, data: { confirm: 'Are you sure?' } 
        
        = form_for UserSay.new do |f|
          .field
            = f.label "Пользователь отвечает"
            Если вы хотите сохранить данные пользователя, то в тренировочных ответах пользователя укажите @переменную и поставьте галочку "сохранить данные от пользователя". Н-р: "Меня зовут @имя", "Я @имя". Бот будет понимать, что вместо переменной @имя будет имя пользователя, которое нужно сохранить. После вы можете использовать переменную @имя в ответах бота.

            = f.text_field :input
            = f.label "Сохранить данные от пользователя"
            = f.check_box :extract_data
            = f.hidden_field :intent, value: lesson.intent
            = f.hidden_field :bot_id, value: @bot.id
            = f.hidden_field :lesson_id, value: lesson.id
            = f.submit '+'
        
        - if lesson.keys.length >= 1
          - lesson.keys.each do |key|
            = key.name + ":"
            - key.samples.each do |sample|
              = sample.name

            = form_for Sample.new do |f|
              .field
                = f.label "Многочисленные примеры #{key.name}"
                = f.hidden_field :user_say_id, value: key.user_say_id
                = f.hidden_field :key_id, value: key.id
                = f.hidden_field :key_name, value: key.name
                = f.hidden_field :bot_id, value: key.bot_id
                = f.text_field :name
                = f.submit '+'
      


      .col-md-6
        
        %h4 Бот реагирует на ответ
        %ul
          - lesson.acts.where(proactive: false, sequence: 1).each do |act|
            %li= act.bot_say
            / %li= act.intent
            = link_to 'Destroy',  act,  method: :delete, data: { confirm: 'Are you sure?' } 
        
        = form_for Act.new do |f|
          .field
            = f.label "Бот реагирует на ответ"
            = f.text_field :bot_say
            = f.hidden_field :intent, value: lesson.intent
            = f.hidden_field :sequence, value: 1
            = f.hidden_field :bot_id, value: @bot.id
            = f.hidden_field :lesson_id, value: lesson.id
            = f.submit '+'

        %h5 Прикрепить к ответу:
        .col-md-2
          %h6 Post
          - if lesson.posts.where(proactive: false).length < 1 
            = form_for Post.new do |f|
              .field  
                = f.hidden_field :bot_id, value: @bot.id
                = f.hidden_field :lesson_id, value: lesson.id
                = f.hidden_field :intent, value: lesson.intent
                = f.hidden_field :sequence, value: 1
                = f.label :title
                = f.text_field :title            
                = f.label :body
                = f.text_area :body
                = f.label :link
                = f.text_field :link
                = f.label :photo
                = f.text_field :photo
              .actions
                = f.submit 'Save'
          
          - else 
            = form_for Post.new do |f|
              .field  
                = f.hidden_field :bot_id, value: @bot.id
                = f.hidden_field :lesson_id, value: lesson.id
                = f.hidden_field :intent, value: lesson.intent
                = f.hidden_field :sequence, value: 1
                = f.label :title
                = f.text_field :title            
                = f.label :body
                = f.text_area :body
                = f.label :link
                = f.text_field :link
                = f.label :photo
                = f.text_field :photo
              .actions
                = f.submit 'Save'
                =link_to "X", post_path(lesson.posts.take), method: :delete


      

