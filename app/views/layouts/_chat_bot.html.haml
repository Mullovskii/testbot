.container
  .row
    .col-md-5
      .panel.panel-primary
        .panel-body
          %ul.chat
            - latest_bot_actions.each do |bot_action|
              .chat-body.clearfix
                .header
                  %strong.primary-font Me
                  %small.pull-right.text-muted
                    %span.glyphicon.glyphicon-time
                    #{time_ago_in_words(bot_action.created_at)} ago
                %p= bot_action.user_input
              .chat-body.clearfix
                .header
                  %small.text-muted
                    %span.glyphicon.glyphicon-time
                    #{time_ago_in_words(bot_action.updated_at)} ago
                  %strong.pull-right.primary-font Bot
                %p= bot_action.bot_response
                // this should be taken to som json partial
                - if Post.where(intent: bot_action.intent, bot_id: bot_action.bot_id).take
                  Прикрепленная новость:
                  = Post.where(intent: bot_action.intent, bot_id: bot_action.bot_id).take.title
                  = Post.where(intent: bot_action.intent, bot_id: bot_action.bot_id).take.body
                  = link_to "Ссылка", Post.where(intent: bot_action.intent, bot_id: bot_action.bot_id).take.link
                  .image
                    = image_tag(Post.where(intent: bot_action.intent, bot_id: bot_action.bot_id).take.photo, class: "image")
                - elsif 
                  / youtube link
                  / event
      
    
                
        .panel-footer
          = form_for bot_action, url: bot_actions_process_user_input_path, remote: true do |f|
            .input-group
              = f.text_field :user_input, autocomplete: 'off', class: 'form-control input-sm', id: 'btn-input', placeholder: 'Type your message here...'
              = f.hidden_field :bot_id
              - if @bot
                = f.hidden_field :bot_id, value: @bot.id

              %span.input-group-btn
                = f.submit 'send', class: 'btn btn-sm', id: 'btn-chat'
